---
import recipes from '../../data/recipes.json';
import { getCollection, getEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
	const recipes = await getCollection('recipes');
	return recipes.map((recipe) => ({
		params: { slug: recipe.id },
		props: { recipe },
	}));
}

const { recipe } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
	'/src/assets/recipe-images/*.{jpeg,jpg,png,gif}',
);
const imagePath = `/src/assets/recipe-images/${recipe.data.image}`;
---

<Layout>
	<script
		is:inline
		set:html={JSON.stringify(recipe.data)}
		type="application/ld+json"
	/>
	<div>
		<div class="max-h-[440px] rounded-2xl overflow-hidden">
			<Image class="w-full" src={images[imagePath]()} alt="" />
		</div>
		<h1 class="text-3xl font-semibold mt-8">{recipe.data.name}</h1>
		<p class="mt-8">{recipe.data.description}</p>
		<div class="mt-8 flex gap-x-3">
			<span class="badge"
				>Prep: {
					recipe.data.prepTime.replace('PT', '').toLowerCase()
				}</span
			>
			<span class="badge"
				>Cook: {
					recipe.data.cookTime.replace('PT', '').toLowerCase()
				}</span
			>
			<span class="badge"
				>Total: {
					recipe.data.totalTime.replace('PT', '').toLowerCase()
				}</span
			>
			<span class="badge">Yield: {recipe.data.recipeYield}</span>
			<span class="badge">{recipe.data.recipeCategory}</span>
		</div>

		<div class="grid md:grid-cols-2 mt-4 gap-6">
			<div
				class="border dark:border-zinc-700 border-gray-200 p-5 rounded-2xl"
			>
				<h2 class="text-xl font-semibold mb-1.5">Ingredients</h2>
				<ul class="list-inside list-disc">
					{
						recipe.data.recipeIngredient.map((ingredient) => (
							<li>{ingredient}</li>
						))
					}
				</ul>
			</div>
			<div
				class="border dark:border-zinc-700 border-gray-200 p-5 rounded-2xl"
			>
				<h2 class="text-xl font-semibold mb-1.5">Instructions</h2>
				<ol class="list-inside list-decimal">
					{
						recipe.data.recipeInstructions.map((instruction) => (
							<li>{instruction.text}</li>
						))
					}
				</ol>
			</div>
		</div>
	</div>
</Layout>
